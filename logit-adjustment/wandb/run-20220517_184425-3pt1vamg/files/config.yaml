wandb_version: 1

_wandb:
  desc: null
  value:
    cli_version: 0.12.16
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    python_version: 3.9.12
    start_time: 1652793265
    t:
      1:
      - 1
      - 41
      - 55
      2:
      - 1
      - 41
      - 55
      3:
      - 2
      - 16
      4: 3.9.12
      5: 0.12.16
      8:
      - 5
batch_size:
  desc: null
  value: 128
classes:
  desc: null
  value: 10
epochs:
  desc: null
  value: 200
imbalance_ratio:
  desc: null
  value: 100
loss:
  desc: null
  value: CrossEntropyLoss()
lr:
  desc: null
  value: 0.1
model:
  desc: null
  value: "ResNet(\n  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n  (layer1): Sequential(\n    (0): BasicBlock(\n \
    \     (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1),\
    \ bias=False)\n      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n      (conv2): Conv2d(16, 16, kernel_size=(3, 3),\
    \ stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(16, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      (shortcut): Sequential()\n\
    \    )\n    (1): BasicBlock(\n      (conv1): Conv2d(16, 16, kernel_size=(3, 3),\
    \ stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(16, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(16,\
    \ 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2):\
    \ BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      (shortcut): Sequential()\n    )\n    (2): BasicBlock(\n      (conv1): Conv2d(16,\
    \ 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1):\
    \ BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n      (shortcut): Sequential()\n    )\n    (3): BasicBlock(\n\
    \      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n      (conv2): Conv2d(16, 16, kernel_size=(3, 3),\
    \ stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(16, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      (shortcut): Sequential()\n\
    \    )\n    (4): BasicBlock(\n      (conv1): Conv2d(16, 16, kernel_size=(3, 3),\
    \ stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(16, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(16,\
    \ 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2):\
    \ BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      (shortcut): Sequential()\n    )\n  )\n  (layer2): Sequential(\n    (0):\
    \ BasicBlock(\n      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2),\
    \ padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n      (conv2): Conv2d(32, 32, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(32,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (shortcut):\
    \ LambdaLayer()\n    )\n    (1): BasicBlock(\n      (conv1): Conv2d(32, 32, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(32,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2):\
    \ Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      (shortcut): Sequential()\n    )\n    (2): BasicBlock(\n      (conv1): Conv2d(32,\
    \ 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1):\
    \ BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n      (shortcut): Sequential()\n    )\n    (3): BasicBlock(\n\
    \      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n      (conv2): Conv2d(32, 32, kernel_size=(3, 3),\
    \ stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(32, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      (shortcut): Sequential()\n\
    \    )\n    (4): BasicBlock(\n      (conv1): Conv2d(32, 32, kernel_size=(3, 3),\
    \ stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(32, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(32,\
    \ 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2):\
    \ BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      (shortcut): Sequential()\n    )\n  )\n  (layer3): Sequential(\n    (0):\
    \ BasicBlock(\n      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2),\
    \ padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (shortcut):\
    \ LambdaLayer()\n    )\n    (1): BasicBlock(\n      (conv1): Conv2d(64, 64, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2):\
    \ Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      (shortcut): Sequential()\n    )\n    (2): BasicBlock(\n      (conv1): Conv2d(64,\
    \ 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1):\
    \ BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n      (shortcut): Sequential()\n    )\n    (3): BasicBlock(\n\
    \      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3),\
    \ stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      (shortcut): Sequential()\n\
    \    )\n    (4): BasicBlock(\n      (conv1): Conv2d(64, 64, kernel_size=(3, 3),\
    \ stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(64,\
    \ 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2):\
    \ BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      (shortcut): Sequential()\n    )\n  )\n  (linear): Linear(in_features=64,\
    \ out_features=10, bias=True)\n)"
test_dataset:
  desc: null
  value: "Dataset CIFAR10\n    Number of datapoints: 10000\n    Root location: /home/apoorva/Datasets/CIFAR10/test\n\
    \    Split: Test\n    StandardTransform\nTransform: Compose(\n               ToTensor()\n\
    \               Normalize(mean=(0.4914, 0.4822, 0.4465), std=(0.2023, 0.1994,\
    \ 0.201))\n           )"
testing_method:
  desc: null
  value: vanilla
train_dataset:
  desc: null
  value: "Dataset CIFAR10\n    Number of datapoints: 50000\n    Root location: /home/apoorva/Datasets/CIFAR10/train\n\
    \    Split: Train\n    StandardTransform\nTransform: Compose(\n              \
    \ RandomCrop(size=(32, 32), padding=4)\n               RandomHorizontalFlip(p=0.5)\n\
    \               ToTensor()\n               Normalize(mean=(0.4914, 0.4822, 0.4465),\
    \ std=(0.2023, 0.1994, 0.201))\n           )"
training_method:
  desc: null
  value: vanilla
